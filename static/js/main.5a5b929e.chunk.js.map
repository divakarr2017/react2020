{"version":3,"sources":["logo.svg","components/Home.js","components/AboutUs.js","components/ContactUs.js","components/Error.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","home","to","style","texDecoration","color","margin","aboutus","contactus","Error","Navigation","App","className","src","logo","alt","href","path","component","Home","exact","AboutUs","ContactUs","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,kC,gLC8B5BC,EAxBF,WACT,OACG,6BACG,oCACA,kBAAC,IAAD,KACM,6BACI,kBAAC,IAAD,CAASC,GAAG,IAAIC,MAAO,CAACC,cAAe,OAAQC,MAAO,QAASC,OAAO,SAAtE,QACA,kBAAC,IAAD,CAASJ,GAAG,SAASC,MAAO,CAACC,cAAe,OAAQC,MAAO,QAASC,OAAO,SAA3E,YACA,kBAAC,IAAD,CAASJ,GAAG,WAAWC,MAAO,CAACC,cAAe,OAAQC,MAAO,QAASC,OAAO,SAA7E,gBANb,mBAUC,2BAAG,6CAAH,mLCCOC,EAjBC,WACZ,OACG,6BACG,uCADH,mBAGC,2BAAG,6CAAH,mLCYOC,EAjBG,WACd,OACG,6BACG,0CACC,8CACH,2BAAG,6CAAH,oLCGOC,EARD,WACV,OACG,6BACG,4DCSKC,EAVI,WACf,OACG,6BACG,kBAAC,IAAD,CAASR,GAAG,IAAIC,MAAO,CAACC,cAAe,OAAQC,MAAO,QAASC,OAAO,SAAtE,QACA,kBAAC,IAAD,CAASJ,GAAG,SAASC,MAAO,CAACC,cAAe,OAAQC,MAAO,QAASC,OAAO,SAA3E,YACA,kBAAC,IAAD,CAASJ,GAAG,WAAWC,MAAO,CAACC,cAAe,OAAQC,MAAO,QAASC,OAAO,SAA7E,gB,uBCyCKK,MApCf,WACE,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SAD3C,mBAGE,2BAAG,6CACH,uBAAGC,KAAK,6CAAR,gBADA,kLAWF,kBAAC,IAAD,KACA,6BACI,kBAAC,IAAD,CAASd,GAAG,IAAIC,MAAO,CAACC,cAAe,OAAQC,MAAO,QAASC,OAAO,SAAtE,QACA,kBAAC,IAAD,CAASJ,GAAG,SAASC,MAAO,CAACC,cAAe,OAAQC,MAAO,QAASC,OAAO,SAA3E,YACA,kBAAC,IAAD,CAASJ,GAAG,WAAWC,MAAO,CAACC,cAAe,OAAQC,MAAO,QAASC,OAAO,SAA7E,eAEF,6BACE,kBAAC,EAAD,MACE,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOW,KAAK,IAAIC,UAAWC,EAAMC,OAAK,IACtC,kBAAC,IAAD,CAAOH,KAAK,SAASC,UAAWG,IAChC,kBAAC,IAAD,CAAOJ,KAAK,WAAWC,UAAWI,IACnC,kBAAC,IAAD,CAAOJ,UAAWT,SC/BVc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5a5b929e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { NavLink } from 'react-router-dom';\n \nconst home = () => {\n    return (\n       <div>\n          <h1>Home</h1>\n          <BrowserRouter>\n                <div>\n                    <NavLink to=\"/\" style={{texDecoration: 'none', color: 'black', margin:'10px'}}>Home</NavLink>\n                    <NavLink to=\"/about\" style={{texDecoration: 'none', color: 'black', margin:'10px'}}>About Us</NavLink>\n                    <NavLink to=\"/contact\" style={{texDecoration: 'none', color: 'black', margin:'10px'}}>Contact Us</NavLink>\n                </div>\n       </BrowserRouter>\n       Learn React 2020\n        <p><b>Divakar Rattan</b>\n        @divakartec09\n        Do more than belong: participate. \n        Do more than care: help. \n        Do more than believe: practice. \n        Do more than be fair: be kind. \n        Do more than forgive: forget. Do more\n        </p>\n       </div>\n    );\n}\n \nexport default home;","import React from 'react';\n \nconst aboutus = () => {\n    return (\n       <div>\n          <h1>Aboutus</h1>\n          Learn React 2020\n        <p><b>Divakar Rattan</b>\n        @divakartec09\n        Do more than belong: participate. \n        Do more than care: help. \n        Do more than believe: practice. \n        Do more than be fair: be kind. \n        Do more than forgive: forget. Do more\n        </p>\n       </div>\n    );\n}\n \nexport default aboutus;","import React from 'react';\n \nconst contactus = () => {\n    return (\n       <div>\n          <h1>Contact us</h1>\n           <p>Learn React 2020\n        <p><b>Divakar Rattan</b>\n            @divakartec09\n            Do more than belong: participate. \n            Do more than care: help. \n            Do more than believe: practice. \n            Do more than be fair: be kind. \n            Do more than forgive: forget. Do more\n            </p></p>\n       </div>\n    );\n}\n \nexport default contactus;","import React from 'react';\n \nconst Error = () => {\n    return (\n       <div>\n          <p>Error: Page does not exist!</p>\n       </div>\n    );\n}\n \nexport default Error;","import React from 'react';\n \nimport { NavLink } from 'react-router-dom';\n \nconst Navigation = () => {\n    return (\n       <div>\n          <NavLink to=\"/\" style={{texDecoration: 'none', color: 'white', margin:'10px'}}>Home</NavLink>\n          <NavLink to=\"/about\" style={{texDecoration: 'none', color: 'white', margin:'10px'}}>About Us</NavLink>\n          <NavLink to=\"/contact\" style={{texDecoration: 'none', color: 'white', margin:'10px'}}>Contact Us</NavLink>\n       </div>\n    );\n}\n    \nexport default Navigation;","\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n \nimport Home from './components/Home';\nimport AboutUs from './components/AboutUs';\nimport ContactUs from './components/ContactUs';\nimport Error from './components/Error';\nimport Navigation from './components/Navigation';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { NavLink } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        Learn React 2020\n        <p><b>Divakar Rattan</b>\n        <a href=\"https://divakarr2017.github.io/react2020/\">demo website</a>\n        @divakartec09\n        Do more than belong: participate. \n        Do more than care: help. \n        Do more than believe: practice. \n        Do more than be fair: be kind. \n        Do more than forgive: forget. Do more\n        </p>\n        \n      </header>\n      <BrowserRouter>\n      <div>\n          <NavLink to=\"/\" style={{texDecoration: 'none', color: 'black', margin:'10px'}}>Home</NavLink>\n          <NavLink to=\"/about\" style={{texDecoration: 'none', color: 'black', margin:'10px'}}>About Us</NavLink>\n          <NavLink to=\"/contact\" style={{texDecoration: 'none', color: 'black', margin:'10px'}}>Contact Us</NavLink>\n       </div>\n        <div>\n          <Navigation />\n            <Switch>\n             <Route path=\"/\" component={Home} exact/>\n             <Route path=\"/about\" component={AboutUs}/>\n             <Route path=\"/contact\" component={ContactUs}/>\n            <Route component={Error}/>\n           </Switch>\n        </div> \n      </BrowserRouter>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}